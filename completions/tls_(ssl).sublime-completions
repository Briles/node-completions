{
    "scope": "source.js",
    "completions": [
        {
            "trigger": "tls.createServer(options, [secureConnectionListener])\ttls_(ssl)",
            "contents": "tls.createServer(${1:options}, ${2:[, secureConnectionListener]});$0"
        },
        {
            "trigger": "tls.connect(options, [callback])\ttls_(ssl)",
            "contents": "tls.connect(${1:port}, ${2:[, host]}, ${3:[, options]}, ${4:[, callback]});$0"
        },
        {
            "trigger": "tls.connect(port, [host], [options], [callback])\ttls_(ssl)",
            "contents": "tls.connect(${1:port}, ${2:[, host]}, ${3:[, options]}, ${4:[, callback]});$0"
        },
        {
            "trigger": "tls.createSecurePair([credentials], [isServer], [requestCert], [rejectUnauthorized])\ttls_(ssl)",
            "contents": "tls.createSecurePair(${1:[, credentials]}, ${2:[, isServer]}, ${3:[, requestCert]}, ${4:[, rejectUnauthorized]});$0"
        },
        {
            "trigger": "secure\ttls_(ssl)",
            "contents": "secure$0"
        },
        {
            "trigger": "server.listen(port, [host], [callback])\ttls_(ssl)",
            "contents": "server.listen(${1:port}, ${2:[, host]}, ${3:[, callback]});$0"
        },
        {
            "trigger": "server.close()\ttls_(ssl)",
            "contents": "server.close();$0"
        },
        {
            "trigger": "server.address()\ttls_(ssl)",
            "contents": "server.address();$0"
        },
        {
            "trigger": "server.addContext(hostname, credentials)\ttls_(ssl)",
            "contents": "server.addContext(${1:hostname}, ${2:credentials});$0"
        },
        {
            "trigger": "tls.server.maxConnections\ttls_(ssl)",
            "contents": "tls.server.maxConnections$0"
        },
        {
            "trigger": "tls.server.connections\ttls_(ssl)",
            "contents": "tls.server.connections$0"
        },
        {
            "trigger": "secureConnection\ttls_(ssl)",
            "contents": "secureConnection$0"
        },
        {
            "trigger": "clientError\ttls_(ssl)",
            "contents": "clientError$0"
        },
        {
            "trigger": "cleartextStream.getPeerCertificate()\ttls_(ssl)",
            "contents": "cleartextStream.getPeerCertificate();$0"
        },
        {
            "trigger": "cleartextStream.getCipher()\ttls_(ssl)",
            "contents": "cleartextStream.getCipher();$0"
        },
        {
            "trigger": "cleartextStream.address()\ttls_(ssl)",
            "contents": "cleartextStream.address();$0"
        },
        {
            "trigger": "tls.cleartextstream.authorized\ttls_(ssl)",
            "contents": "tls.cleartextstream.authorized$0"
        },
        {
            "trigger": "tls.cleartextstream.authorizationError\ttls_(ssl)",
            "contents": "tls.cleartextstream.authorizationError$0"
        },
        {
            "trigger": "tls.cleartextstream.remoteAddress\ttls_(ssl)",
            "contents": "tls.cleartextstream.remoteAddress$0"
        },
        {
            "trigger": "tls.cleartextstream.remotePort\ttls_(ssl)",
            "contents": "tls.cleartextstream.remotePort$0"
        },
        {
            "trigger": "secureConnect\ttls_(ssl)",
            "contents": "secureConnect$0"
        }
    ]
}