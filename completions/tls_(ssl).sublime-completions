{
    "scope": "source.js",
    "completions": [
        {
            "trigger": "new tls.TLSSocket(socket[, options])\ttls_(ssl)",
            "contents": "new tls.TLSSocket(${1:socket}, ${2:[, options]});$0"
        },
        {
            "trigger": "tls.connect(options[, callback])\ttls_(ssl)",
            "contents": "tls.connect(${1:port}, ${2:[, host]}, ${3:[, options]}, ${4:[, callback]});$0"
        },
        {
            "trigger": "tls.connect(port[, host][, options][, callback])\ttls_(ssl)",
            "contents": "tls.connect(${1:port}, ${2:[, host]}, ${3:[, options]}, ${4:[, callback]});$0"
        },
        {
            "trigger": "tls.createSecureContext(details)\ttls_(ssl)",
            "contents": "tls.createSecureContext(${1:details});$0"
        },
        {
            "trigger": "tls.createSecurePair([context][, isServer][, requestCert][, rejectUnauthorized][, options])\ttls_(ssl)",
            "contents": "tls.createSecurePair(${1:[, context]}, ${2:[, isServer]}, ${3:[, requestCert]}, ${4:[, rejectUnauthorized]}, ${5:[, options]});$0"
        },
        {
            "trigger": "tls.createServer(options[, secureConnectionListener])\ttls_(ssl)",
            "contents": "tls.createServer(${1:options}, ${2:[, secureConnectionListener]});$0"
        },
        {
            "trigger": "tls.getCiphers()\ttls_(ssl)",
            "contents": "tls.getCiphers();$0"
        },
        {
            "trigger": "cryptostream.bytesWritten\ttls_(ssl)",
            "contents": "cryptostream.bytesWritten$0"
        },
        {
            "trigger": "secure\ttls_(ssl)",
            "contents": "secure$0"
        },
        {
            "trigger": "server.addContext(hostname, context)\ttls_(ssl)",
            "contents": "server.addContext(${1:hostname}, ${2:context});$0"
        },
        {
            "trigger": "server.address()\ttls_(ssl)",
            "contents": "server.address();$0"
        },
        {
            "trigger": "server.close([callback])\ttls_(ssl)",
            "contents": "server.close(${1:[, callback]});$0"
        },
        {
            "trigger": "server.getTicketKeys()\ttls_(ssl)",
            "contents": "server.getTicketKeys();$0"
        },
        {
            "trigger": "server.listen(port[, hostname][, callback])\ttls_(ssl)",
            "contents": "server.listen(${1:port}, ${2:[, hostname]}, ${3:[, callback]});$0"
        },
        {
            "trigger": "server.setTicketKeys(keys)\ttls_(ssl)",
            "contents": "server.setTicketKeys(${1:keys});$0"
        },
        {
            "trigger": "tls.server.connections\ttls_(ssl)",
            "contents": "tls.server.connections$0"
        },
        {
            "trigger": "tls.server.maxConnections\ttls_(ssl)",
            "contents": "tls.server.maxConnections$0"
        },
        {
            "trigger": "clientError\ttls_(ssl)",
            "contents": "clientError$0"
        },
        {
            "trigger": "newSession\ttls_(ssl)",
            "contents": "newSession$0"
        },
        {
            "trigger": "OCSPRequest\ttls_(ssl)",
            "contents": "OCSPRequest$0"
        },
        {
            "trigger": "resumeSession\ttls_(ssl)",
            "contents": "resumeSession$0"
        },
        {
            "trigger": "secureConnection\ttls_(ssl)",
            "contents": "secureConnection$0"
        }
    ]
}