{
    "scope": "source.js",
    "completions": [
        {
            "trigger": "url.domainToASCII(domain)\turl",
            "contents": "url.domainToASCII(${1:domain});$0"
        },
        {
            "trigger": "url.domainToUnicode(domain)\turl",
            "contents": "url.domainToUnicode(${1:domain});$0"
        },
        {
            "trigger": "url.format(urlObject)\turl",
            "contents": "url.format(${1:urlObject});$0"
        },
        {
            "trigger": "url.format(URL[, options])\turl",
            "contents": "url.format(${1:URL}, ${2:[, options]});$0"
        },
        {
            "trigger": "url.parse(urlString[, parseQueryString[, slashesDenoteHost]])\turl",
            "contents": "url.parse(${1:urlString}, ${2:[, parseQueryString]}, ${3:[, slashesDenoteHost]});$0"
        },
        {
            "trigger": "url.resolve(from, to)\turl",
            "contents": "url.resolve(${1:from}, ${2:to});$0"
        },
        {
            "trigger": "url_strings_and_url_objects.auth\turl",
            "contents": "url_strings_and_url_objects.auth$0"
        },
        {
            "trigger": "url_strings_and_url_objects.hash\turl",
            "contents": "url_strings_and_url_objects.hash$0"
        },
        {
            "trigger": "sub.host\turl",
            "contents": "sub.host$0"
        },
        {
            "trigger": "url_strings_and_url_objects.hostname\turl",
            "contents": "url_strings_and_url_objects.hostname$0"
        },
        {
            "trigger": "url_strings_and_url_objects.href\turl",
            "contents": "url_strings_and_url_objects.href$0"
        },
        {
            "trigger": "url_strings_and_url_objects.path\turl",
            "contents": "url_strings_and_url_objects.path$0"
        },
        {
            "trigger": "url_strings_and_url_objects.pathname\turl",
            "contents": "url_strings_and_url_objects.pathname$0"
        },
        {
            "trigger": "url_strings_and_url_objects.port\turl",
            "contents": "url_strings_and_url_objects.port$0"
        },
        {
            "trigger": "url_strings_and_url_objects.protocol\turl",
            "contents": "url_strings_and_url_objects.protocol$0"
        },
        {
            "trigger": "url_strings_and_url_objects.query\turl",
            "contents": "url_strings_and_url_objects.query$0"
        },
        {
            "trigger": "url_strings_and_url_objects.search\turl",
            "contents": "url_strings_and_url_objects.search$0"
        },
        {
            "trigger": "url_strings_and_url_objects.slashes\turl",
            "contents": "url_strings_and_url_objects.slashes$0"
        },
        {
            "trigger": "url.toString()\turl",
            "contents": "url.toString();$0"
        },
        {
            "trigger": "url.toJSON()\turl",
            "contents": "url.toJSON();$0"
        },
        {
            "trigger": "myURL.hash\turl",
            "contents": "myURL.hash$0"
        },
        {
            "trigger": "myURL.host\turl",
            "contents": "myURL.host$0"
        },
        {
            "trigger": "url.hostname\turl",
            "contents": "url.hostname$0"
        },
        {
            "trigger": "myURL.href\turl",
            "contents": "myURL.href$0"
        },
        {
            "trigger": "myURL.origin\turl",
            "contents": "myURL.origin$0"
        },
        {
            "trigger": "myURL.password\turl",
            "contents": "myURL.password$0"
        },
        {
            "trigger": "myURL.pathname\turl",
            "contents": "myURL.pathname$0"
        },
        {
            "trigger": "myURL.port\turl",
            "contents": "myURL.port$0"
        },
        {
            "trigger": "myURL.protocol\turl",
            "contents": "myURL.protocol$0"
        },
        {
            "trigger": "myURL.search\turl",
            "contents": "myURL.search$0"
        },
        {
            "trigger": "url.searchParams\turl",
            "contents": "url.searchParams$0"
        },
        {
            "trigger": "myURL.username\turl",
            "contents": "myURL.username$0"
        },
        {
            "trigger": "urlSearchParams.append(name, value)\turl",
            "contents": "urlSearchParams.append(${1:name}, ${2:value});$0"
        },
        {
            "trigger": "urlSearchParams.delete(name)\turl",
            "contents": "urlSearchParams.delete(${1:name});$0"
        },
        {
            "trigger": "urlSearchParams.entries()\turl",
            "contents": "urlSearchParams.entries();$0"
        },
        {
            "trigger": "urlSearchParams.forEach(fn[, thisArg])\turl",
            "contents": "urlSearchParams.forEach(${1:fn}, ${2:[, thisArg]});$0"
        },
        {
            "trigger": "urlSearchParams.get(name)\turl",
            "contents": "urlSearchParams.get(${1:name});$0"
        },
        {
            "trigger": "urlSearchParams.getAll(name)\turl",
            "contents": "urlSearchParams.getAll(${1:name});$0"
        },
        {
            "trigger": "urlSearchParams.has(name)\turl",
            "contents": "urlSearchParams.has(${1:name});$0"
        },
        {
            "trigger": "urlSearchParams.keys()\turl",
            "contents": "urlSearchParams.keys();$0"
        },
        {
            "trigger": "urlSearchParams.set(name, value)\turl",
            "contents": "urlSearchParams.set(${1:name}, ${2:value});$0"
        },
        {
            "trigger": "urlSearchParams.sort()\turl",
            "contents": "urlSearchParams.sort();$0"
        },
        {
            "trigger": "urlSearchParams.toString()\turl",
            "contents": "urlSearchParams.toString();$0"
        },
        {
            "trigger": "urlSearchParams.values()\turl",
            "contents": "urlSearchParams.values();$0"
        },
        {
            "trigger": "urlSearchParams\\[@@iterator\\]()\turl",
            "contents": "urlSearchParams\\[@@iterator\\]();$0"
        }
    ]
}