{
    "scope": "source.js",
    "completions": [
        {
            "trigger": "readline.clearLine(stream, dir)\treadline",
            "contents": "readline.clearLine(${1:stream}, ${2:dir});$0"
        },
        {
            "trigger": "readline.clearScreenDown(stream)\treadline",
            "contents": "readline.clearScreenDown(${1:stream});$0"
        },
        {
            "trigger": "readline.createInterface(options)\treadline",
            "contents": "readline.createInterface(${1:options});$0"
        },
        {
            "trigger": "readline.cursorTo(stream, x, y)\treadline",
            "contents": "readline.cursorTo(${1:stream}, ${2:x}, ${3:y});$0"
        },
        {
            "trigger": "readline.emitKeypressEvents(stream[, interface])\treadline",
            "contents": "readline.emitKeypressEvents(${1:stream}, ${2:[, interface]});$0"
        },
        {
            "trigger": "readline.moveCursor(stream, dx, dy)\treadline",
            "contents": "readline.moveCursor(${1:stream}, ${2:dx}, ${3:dy});$0"
        },
        {
            "trigger": "rl.close()\treadline",
            "contents": "rl.close();$0"
        },
        {
            "trigger": "rl.pause()\treadline",
            "contents": "rl.pause();$0"
        },
        {
            "trigger": "rl.prompt([preserveCursor])\treadline",
            "contents": "rl.prompt(${1:[, preserveCursor]});$0"
        },
        {
            "trigger": "rl.question(query, callback)\treadline",
            "contents": "rl.question(${1:query}, ${2:callback});$0"
        },
        {
            "trigger": "rl.resume()\treadline",
            "contents": "rl.resume();$0"
        },
        {
            "trigger": "rl.setPrompt(prompt)\treadline",
            "contents": "rl.setPrompt(${1:prompt});$0"
        },
        {
            "trigger": "rl.write(data[, key])\treadline",
            "contents": "rl.write(${1:data}, ${2:[, key]});$0"
        },
        {
            "trigger": "rl[Symbol.asyncIterator]()\treadline",
            "contents": "rl[Symbol.asyncIterator]();$0"
        },
        {
            "trigger": "close\treadline",
            "contents": "close$0"
        },
        {
            "trigger": "line\treadline",
            "contents": "line$0"
        },
        {
            "trigger": "pause\treadline",
            "contents": "pause$0"
        },
        {
            "trigger": "resume\treadline",
            "contents": "resume$0"
        },
        {
            "trigger": "SIGCONT\treadline",
            "contents": "SIGCONT$0"
        },
        {
            "trigger": "SIGINT\treadline",
            "contents": "SIGINT$0"
        },
        {
            "trigger": "SIGTSTP\treadline",
            "contents": "SIGTSTP$0"
        }
    ]
}